on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - Cargo.toml
      - Cargo.lock
      - .github/workflows/make-cross.yml
      - Makefile
      - 'rust-toolchain'
      - 'rust-toolchain.toml'
      - 'spec.json'
  pull_request:
    paths:
      - '**.rs'
      - Cargo.toml
      - Cargo.lock
      - .github/workflows/cargo-build.yml
      - 'rust-toolchain'
      - 'rust-toolchain.toml'
      - 'spec.json'
name: make cross
jobs:
  cross:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    name: make cross
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        name: Install deps
        shell: bash
        run: |
          ./.github/workflows/cross-deps.sh
      - if: ${{ matrix.os == 'macos-latest' }}
        name: Install deps
        shell: bash
        run: |
          brew install \
            coreutils \
            jq
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run make cross
        run: |
          export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
          make release
          ls -la cross
        shell: bash
      - name: Add tar.gz compression to mac release
        shell: bash
        run: |
          # generate tar.gz of the mac release
          tar -czf cross/kittycad-x86_64-apple-darwin.targ.gz cross/kittycad-x86_64-apple-darwin
          export COMPRESSED_SHA=$(shasum -a 256 cross/cross/kittycad-x86_64-apple-darwin.targ.gz)
          export VERSION=v$(toml get Cargo.toml package.version | jq -r .)
          export URL="https:\/\/dl.kittycad.io\/releases\/cli\/$VERSION\/kittycad-x86_64-apple-darwin.targ.gz"
          ls -la

          # debug var checks
          echo $COMPRESSED_SHA
          echo $VERSION
          echo $URL

          # substitute placeholders in the template homebrew-tap-template.rb
          cp homebrew-tap-template.rb kittycad.rb
          sed -i "" "s/replace-with-sha/$COMPRESSED_SHA/g" kittycad.rb
          sed -i "" "s/replace-with-semver/$VERSION/g" kittycad.rb
          sed -i "" "s/replace-with-url/$URL/g" kittycad.rb

          # send contents of kittycad.rb to stdout for debug
          cat kittycad.rb

          # TODO commit kittycad.rb to https://github.com/KittyCAD/homebrew-kittycad

          
